<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Shane Peelar's Blog</title><link>https://inbetweennames.net/blog/</link><description>Recent content in Blog on Shane Peelar's Blog</description><generator>Hugo -- gohugo.io</generator><copyright>&amp;copy; 2022 Shane Peelar</copyright><lastBuildDate>Tue, 01 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://inbetweennames.net/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Fast reciprocal square root... in 1997?!</title><link>https://inbetweennames.net/blog/2021-05-06-i76rsqrt/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://inbetweennames.net/blog/2021-05-06-i76rsqrt/</guid><description>This article is part of my series on reverse engineering Interstate &amp;lsquo;76, with my current goal being to add a Vulkan renderer to the game. I&amp;rsquo;m basing this work directly on UCyborg&amp;rsquo;s patches which include many much-needed fixups to the game, including my own patches for the netcode.
Introduction Everyone is familiar with the famous fast reciprocal square root function in the Quake 3 source code. And, as noted on Wikipedia, solutions have existed for computing the fast reciprocal square root for many years before that, with perhaps the earliest implementation in 1986.</description></item><item><title>Interstate '76 Reverse Engineering</title><link>https://inbetweennames.net/blog/2021-05-04-interstate-76-reverse-engineering-efforts-the-story-so-far/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://inbetweennames.net/blog/2021-05-04-interstate-76-reverse-engineering-efforts-the-story-so-far/</guid><description>I played a lot of videogames when I was growing up &amp;ndash; one of them, I&amp;rsquo;ve found myself coming back to time and time again:
The game is called Interstate &amp;lsquo;76. Set in an alternate-history version if 1976 where vigilantes and &amp;ldquo;creepers&amp;rdquo; duke it out in souped up muscle cars with guns, rockets, and all kinds of other gadgets. On game consoles, the closest analogue would have been the Twisted Metal series, but Interstate was far less dark and had somewhat deep simulation mechanics involved: you could customize your car quite thoroughly and these customizations had big effects on how you&amp;rsquo;d drive it.</description></item><item><title>Life Update and Workshop</title><link>https://inbetweennames.net/blog/intro-to-open-source/</link><pubDate>Tue, 06 Aug 2019 20:39:12 -0400</pubDate><guid>https://inbetweennames.net/blog/intro-to-open-source/</guid><description>Wow, quite a few things happened since my last update here! I meant to post a lot more often but things got busy real fast. I got married (woohoo!) and published a paper at WEBIST 2019 which I&amp;rsquo;m very excited about. I also got accepted as a sessional instructor for Fall 2019 teaching Agile Software Development at the University of Windsor! Very cool indeed.
Last week, I ran a set of workshops at the University of Windsor geared towards the Masters of Applied Computing students.</description></item><item><title>GentooLTO Survey Results</title><link>https://inbetweennames.net/blog/gentoolto-27/</link><pubDate>Mon, 29 Apr 2019 21:05:54 -0400</pubDate><guid>https://inbetweennames.net/blog/gentoolto-27/</guid><description>The GentooLTO Project has concluded its first survey of users. The results are in the news file.
A thorough introduction to GentooLTO can be found here. Briefly, GentooLTO is a project that chooses highly aggressive compiler optimization defaults for building Gentoo systems, which itself is a source-based Linux distro. In particular, the project enables Link Time Optimization by default, which only a few distros are starting to use, including Clear Linux and OpenMandriva.</description></item><item><title>Adventures in OpenWRT</title><link>https://inbetweennames.net/blog/openwrt-2/</link><pubDate>Tue, 09 Apr 2019 15:18:20 -0400</pubDate><guid>https://inbetweennames.net/blog/openwrt-2/</guid><description>Last time, I gave an overview of what is required to host your blog on your home router. Today, we&amp;rsquo;ll discuss the basics of OpenWRT and some minimal packages to install to get started.
Introduction OpenWRT OpenWRT is a Linux-based OS that targets embedded devices. It&amp;rsquo;s based on buildroot and can be thought of as a buildroot tailored for network hardware. OpenWRT offers stable releases as well as development builds. Before getting started, check to make sure your hardware is supported before continuing.</description></item><item><title>Adventures in OpenWRT</title><link>https://inbetweennames.net/blog/openwrt-1/</link><pubDate>Mon, 08 Apr 2019 12:38:14 -0400</pubDate><guid>https://inbetweennames.net/blog/openwrt-1/</guid><description>I originally wrote a guide for using OpenWRT to host a blog on an ASUS AC-87u, but the instructions are a little out of date and need a bit of a refresh. This newer guide should hopefully be simpler.
Overview To start, I&amp;rsquo;m hosting this blog on a Linksys WRT3200ACM in my own apartment on a nightly build of OpenWRT. I&amp;rsquo;m no longer using extroot as I was before, as my SSD unfortunately died on me.</description></item><item><title>Back Online</title><link>https://inbetweennames.net/blog/back-online/</link><pubDate>Thu, 04 Apr 2019 13:47:27 -0400</pubDate><guid>https://inbetweennames.net/blog/back-online/</guid><description>Well, my old server&amp;rsquo;s SSD finally died on me, and I figured this would make a good opportunity to update my blog! Previously, this site was hosted on an ASUS AC-87U with an SSD attached using Grav. It worked well enough, although the installation process and setup was a bit slow and involved. Since my last post, I&amp;rsquo;ve streamlined this process considerably and am now using the Hugo static site generator to avoid the need for having PHP on the system.</description></item></channel></rss>